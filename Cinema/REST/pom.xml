<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>pl.pas.gr3</groupId>
        <artifactId>Cinema</artifactId>
        <version>1.0.0</version>
    </parent>

    <packaging>war</packaging>
    <artifactId>REST</artifactId>
    <name>REST</name>

    <properties>
        <java.version>17</java.version>
        <jjwt.version>0.12.3</jjwt.version>
        <jackson.version>2.17.2</jackson.version>

        <!-- Framework -->
        <spring.boot.version>3.3.2</spring.boot.version>
        <spring.bom.version>6.1.3</spring.bom.version>
        <spring.security.version>6.2.1</spring.security.version>

        <!-- DB -->
        <postgresql.version>42.7.3</postgresql.version>

        <!-- Beans Validation -->
        <jakarta.validation-api.version>3.1.0</jakarta.validation-api.version>
        <hibernate-validator.version>8.0.1.Final</hibernate-validator.version>

        <!-- Testing -->
        <rest-assured.version>5.3.2</rest-assured.version>

        <!-- OpenAPI & Swagger -->
        <springdoc-openapi.version>2.6.0</springdoc-openapi.version>

        <!-- JWT -->
        <java-jwt.version>4.4.0</java-jwt.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring.boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <!-- Framework  -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-tomcat</artifactId>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-test</artifactId>
            <version>${spring.security.version}</version>
            <scope>test</scope>
        </dependency>

        <!-- DB driver -->
        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <version>${postgresql.version}</version>
        </dependency>

        <!-- Beans Validation dependencies -->
        <dependency>
            <groupId>jakarta.validation</groupId>
            <artifactId>jakarta.validation-api</artifactId>
            <version>${jakarta.validation-api.version}</version>
        </dependency>

        <dependency>
            <groupId>org.hibernate.validator</groupId>
            <artifactId>hibernate-validator</artifactId>
            <version>${hibernate-validator.version}</version>
        </dependency>

        <!-- RestAssured dependencies -->
        <dependency>
            <groupId>io.rest-assured</groupId>
            <artifactId>rest-assured</artifactId>
            <version>${rest-assured.version}</version>
        </dependency>

        <dependency>
            <groupId>io.rest-assured</groupId>
            <artifactId>json-path</artifactId>
            <version>${rest-assured.version}</version>
        </dependency>

        <!-- Dependencies for JWT -->
        <dependency>
            <groupId>com.auth0</groupId>
            <artifactId>java-jwt</artifactId>
            <version>${java-jwt.version}</version>
        </dependency>

        <!--Jackson-->
        <dependency>
            <groupId>javax.xml.bind</groupId>
            <artifactId>jaxb-api</artifactId>
            <version>2.3.1</version>
        </dependency>


        <dependency>
            <groupId>com.fasterxml.jackson.datatype</groupId>
            <artifactId>jackson-datatype-jsr310</artifactId>
            <version>${jackson.version}</version>
        </dependency>

        <dependency>
            <groupId>com.fasterxml.jackson.dataformat</groupId>
            <artifactId>jackson-dataformat-xml</artifactId>
            <version>${jackson.version}</version>
        </dependency>

        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>${jackson.version}</version>
        </dependency>

        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-core</artifactId>
            <version>${jackson.version}</version>
        </dependency>

        <dependency>
            <groupId>com.fasterxml.jackson.module</groupId>
            <artifactId>jackson-module-jakarta-xmlbind-annotations</artifactId>
            <version>${jackson.version}</version>
        </dependency>

        <!-- OpenAPI & Swagger -->
        <dependency>
            <groupId>org.springdoc</groupId>
            <artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
            <version>${springdoc-openapi.version}</version>
        </dependency>

        <!-- Other dependencies -->
        <dependency>
            <groupId>pl.pas.gr3</groupId>
            <artifactId>DTO</artifactId>
            <version>1.0.0</version>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <version>${spring.boot.version}</version>
                <configuration>
                    <excludes>
                        <exclude>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok</artifactId>
                        </exclude>
                    </excludes>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-site-plugin</artifactId>
                <version>${maven-site-plugin.version}</version>
            </plugin>

            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>${jacoco-maven-plugin.version}</version>
                <executions>
                    <execution>
                        <id>default-prepare-agent</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>default-report</id>
                        <goals>
                            <goal>report</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>default-check</id>
                        <goals>
                            <goal>check</goal>
                        </goals>
                        <configuration>
                            <rules>
                                <rule>
                                    <element>BUNDLE</element>
                                    <limits>
                                        <limit>
                                            <counter>COMPLEXITY</counter>
                                            <value>COVEREDRATIO</value>
                                            <minimum>0</minimum>
                                        </limit>
                                    </limits>
                                </rule>
                            </rules>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>

        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
        </resources>
    </build>

    <profiles>
        <profile>
            <id>dev</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <web-application-server>http://localhost:8080</web-application-server>
                <spa-application-server>http://localhost:3000</spa-application-server>

                <db.identifier>postgresql</db.identifier>

                <db.name>cinema_db</db.name>
                <db.host>localhost</db.host>
                <db.port>5432</db.port>

                <db.driver-class-name>org.postgresql.Driver</db.driver-class-name>
                <db.username>admin</db.username>
                <db.password>password</db.password>
                <schema-gen.policy>create-drop</schema-gen.policy>
                <db-queries.debug>true</db-queries.debug>
                <logging.level>INFO</logging.level>

                <hibernate.dialect>org.hibernate.dialect.PostgreSQLDialect</hibernate.dialect>
                <init.mode>always</init.mode>
                <initialize-datasource>true</initialize-datasource>

                <active.profile>dev</active.profile>
            </properties>
        </profile>

        <profile>
            <id>prod</id>
            <properties>
                <web-application-server>TBD</web-application-server>
                <spa-application-server>TBD</spa-application-server>

                <db.identifier>postgresql</db.identifier>

                <db.name>cinema_db</db.name>
                <db.host>localhost</db.host>
                <db.port>5432</db.port>

                <db.driver-class-name>org.postgresql.Driver</db.driver-class-name>
                <db.username>admin</db.username>
                <db.password>password</db.password>
                <schema-gen.policy>create-drop</schema-gen.policy>
                <db-queries.debug>true</db-queries.debug>
                <logging.level>INFO</logging.level>

                <hibernate.dialect>org.hibernate.dialect.PostgreSQLDialect</hibernate.dialect>
                <init.mode>never</init.mode>
                <initialize-datasource>false</initialize-datasource>

                <active.profile>prod</active.profile>
            </properties>
        </profile>

        <profile>
            <id>test</id>
            <properties>
                <web-application-server>http://localhost:8080</web-application-server>
                <spa-application-server>http://localhost:3000</spa-application-server>

                <db.identifier>postgresql</db.identifier>

                <db.name>cinema_db</db.name>
                <db.host>localhost</db.host>
                <db.port>5432</db.port>

                <db.driver-class-name>org.postgresql.Driver</db.driver-class-name>
                <db.username>admin</db.username>
                <db.password>password</db.password>
                <schema-gen.policy>create-drop</schema-gen.policy>
                <db-queries.debug>true</db-queries.debug>
                <logging.level>INFO</logging.level>

                <hibernate.dialect>org.hibernate.dialect.PostgreSQLDialect</hibernate.dialect>
                <init.mode>always</init.mode>
                <initialize-datasource>true</initialize-datasource>

                <active.profile>test</active.profile>
            </properties>
        </profile>
    </profiles>

    <description>
        REST API for Cinema web application.
    </description>

</project>